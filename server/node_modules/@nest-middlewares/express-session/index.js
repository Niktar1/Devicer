"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var ExpressSessionMiddleware_1;
Object.defineProperty(exports, "__esModule", { value: true });
exports.ExpressSessionMiddleware = void 0;
const common_1 = require("@nestjs/common");
const express_session_1 = __importDefault(require("express-session"));
let ExpressSessionMiddleware = ExpressSessionMiddleware_1 = class ExpressSessionMiddleware {
    // DELETE THESE LINES IF MIDDLEWARE DOES NOT TAKE OPTIONS
    static configure(opts) {
        this.options = opts;
    }
    getSingleton() {
        if (!this.singleton) {
            if (ExpressSessionMiddleware_1.options) {
                this.singleton = (0, express_session_1.default)(ExpressSessionMiddleware_1.options);
            }
            else {
                this.singleton = (0, express_session_1.default)();
            }
        }
        return this.singleton;
    }
    use(req, res, next) {
        this.getSingleton()(req, res, next);
    }
};
exports.ExpressSessionMiddleware = ExpressSessionMiddleware;
exports.ExpressSessionMiddleware = ExpressSessionMiddleware = ExpressSessionMiddleware_1 = __decorate([
    (0, common_1.Injectable)()
], ExpressSessionMiddleware);
//# sourceMappingURL=index.js.map